{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.js","components/Dropdown/Dropdown.js","components/ColorPicker/ColorPicker.js","components/TodoList/TodoList.js","components/Form.js","App.js","index.js"],"names":["Controls","onIncrement","onDecrement","className","type","onClick","Value","value","Counter","state","props","initialValue","handleIncrement","setState","prevState","handleDecrement","this","Component","defaultProps","Dropdown","visible","toggle","ColorPicker","activeOptionIdx","setActiveIdx","index","makeOptionClassName","optionClasses","push","join","options","label","map","color","style","backgroundColor","TodoList","todos","onDeleteTodo","id","text","Form","name","tag","experience","licence","handleChange","event","currentTarget","handleSubmit","e","preventDefault","propOnSubmit","reset","handleLicenceChange","console","log","checked","onSubmit","onChange","disabled","colorPickerOptions","App","initialTodos","deleteTodo","todoId","filter","todo","formSubmitHandler","data","totalTodoCount","length","completedTodoCount","reduce","acc","completed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e681f21b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Controls = ({ onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на 1\n    </button>\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на 1\n    </button>\n  </div>\n);\n\nexport default Controls;\n","import React from 'react';\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;\n","import React, { Component } from 'react';\nimport Controls from './Controls';\nimport Value from './Value';\nimport './Counter.css';\n\nclass Counter extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {\n    //\n  };\n\n  state = {\n    value: this.props.initialValue,\n  };\n\n  handleIncrement = () => {\n    // this.setState({  // Изменяет состояние, т.е. состояние на момент регистрации\n    //     value: 10,\n    // });\n\n    this.setState(prevState => ({\n      // Обновить от предыдущего. Основываясь на предыдущем передаем функцию\n      value: prevState.value + 1,\n    }));\n  };\n\n  handleDecrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value - 1,\n    }));\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div className=\"Counter\">\n        <Value value={value} />\n        <Controls onIncrement={this.handleIncrement} onDecrement={this.handleDecrement} />\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n\n// class Counter extends React.Component {\n//     handleIncrement = event => {\n//         console.log('Кликнули');\n//         // console.log(event.target);\n\n//         // const target = event.target;\n//         const {target} = event;  // деструктуризация\n\n//         setTimeout(() => {\n//             console.log(target);\n//         }, 1000)\n//     }\n\n//     handleDecrement = event => {\n//        console.log('Кликнули');\n//     }\n\n//     render() {\n//         return (\n//             <div className='Counter'>\n//             <span className='Counter__value'>0</span>\n\n//             <div className='Counter__controls'>\n//                     <button\n//                         type='button'\n//                         onClick={this.handleIncrement}>\n//                         Увеличить на 1\n//                     </button>\n//                     <button\n//                         type='button'\n//                         onClick={this.handleDecrement}>\n//                         Уменьшить на 1\n//                     </button>\n//             </div>\n//         </div>);\n//     }\n// }\n\n// export default Counter;\n","import React, { Component } from 'react';\nimport './Dropdown.css';\n\nclass Dropdown extends Component {\n  state = {\n    visible: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      visible: !prevState.visible,\n    }));\n  };\n\n  // show = () => {\n  //     this.setState({ visible: true });\n  // }\n\n  // hide = () => {\n  //     this.setState({ visible: false });\n  // }\n\n  render() {\n    //     const { visible } = this.state;\n\n    return (\n      <div className=\"Dropdown\">\n        <button\n          type=\"button\"\n          className=\"Dropdown__toggle\"\n          onClick={this.toggle} // onMouseOver - если надо показать на hover\n        >\n          {this.state.visible ? 'Скрыть' : 'Показать'}\n        </button>\n\n        {this.state.visible && <div className=\"Dropdown__menu\">Выпадающее меню</div>}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport './ColorPicker.css';\n\nclass ColorPicker extends Component {\n  state = {\n    activeOptionIdx: 0, // Это индекс\n  };\n\n  setActiveIdx = index => {\n    this.setState({ activeOptionIdx: index });\n  };\n\n  makeOptionClassName = index => {\n    const optionClasses = ['ColorPicker__option'];\n\n    if (index === this.state.activeOptionIdx) {\n      optionClasses.push('ColorPicker__option--active');\n    }\n\n    return optionClasses.join(' ');\n  };\n\n  render() {\n    const { activeOptionIdx } = this.state;\n    const { options } = this.props;\n    const { label } = options[activeOptionIdx];\n    return (\n      <div className=\"ColorPicker\">\n        <h2 className=\"ColorPicker__title\">Color Picker</h2>\n        <p>Выбран цвет: {label}</p>\n        <div>\n          {options.map(({ label, color }, index) => (\n            <button\n              key={label}\n              className={this.makeOptionClassName(index)}\n              style={{ backgroundColor: color }}\n              onClick={() => this.setActiveIdx(index)}\n            ></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React from 'react';\nimport './TodoList.css';\n\nconst TodoList = ({ todos, onDeleteTodo }) => (\n  <ul className=\"TodoList\">\n    {todos.map(({ id, text }) => (\n      <li key={id} className=\"TodoList__item\">\n        <p className=\"TodoList__text\">{text}</p>\n        <button onClick={() => onDeleteTodo(id)}>Удалить</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    tag: \"\",\r\n    experience: \"junior\",\r\n    licence: false,\r\n  };\r\n\r\n  handleChange = event => {\r\n    // console.log(event.currentTarget);\r\n    // console.log(event.currentTarget.name);\r\n    // console.log(event.currentTarget.value);\r\n\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      // [event.currentTarget.name]: event.currentTarget.value,\r\n      [name]: value,\r\n    });\r\n  };\r\n    \r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.propOnSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  handleLicenceChange = e => {\r\n    console.log(e.currentTarget.checked);\r\n\r\n    this.setState({ licence: e.currentTarget.checked });\r\n  }\r\n  \r\n  reset = () => {\r\n    this.setState({name: \"\",\r\n      tag: \"\"\r\n    });\r\n  }\r\n    \r\n    render() {\r\n        return (\r\n              <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Имя\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Прозвище\r\n            <input\r\n              type=\"text\"\r\n              name=\"tag\"\r\n              value={this.state.tag}\r\n              onChange={this.handleChange}\r\n            />\r\n            </label>\r\n            \r\n            <p>Ваш уровень:</p>\r\n\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"experience\"\r\n                value=\"junior\"\r\n                onChange={this.handleChange}\r\n                checked={this.state.experience === 'junior'}\r\n              /> Junior\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"experience\"\r\n                value=\"middle\"\r\n                onChange={this.handleChange}\r\n                checked={this.state.experience === 'middle'}\r\n              /> Middle\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"experience\"\r\n                value=\"senior\"\r\n                onChange={this.handleChange}\r\n                checked={this.state.experience === 'senior'}\r\n              /> Senior\r\n            </label>\r\n            <br />\r\n            \r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"licence\"\r\n                id=\"\"\r\n                checked={this.state.licence}\r\n                onChange={this.handleLicenceChange}\r\n              /> Согласен с условием\r\n            </label>\r\n            \r\n\r\n          <button type=\"submit\" disabled={!this.state.licence}>Отправить</button>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport Counter from './components/Counter';\nimport Dropdown from './components/Dropdown';\nimport ColorPicker from './components/ColorPicker';\nimport TodoList from './components/TodoList';\nimport initialTodos from './todos.json';\nimport Form from './components/Form';\n\nconst colorPickerOptions = [\n  { label: 'red', color: '#F44336' },\n  { label: 'green', color: '#4CAF50' },\n  { label: 'blue', color: '#2196F3' },\n  { label: 'grey', color: '#607D8B' },\n  { label: 'pink', color: '#E91E63' },\n  { label: 'indigo', color: '#3F51B5' },\n];\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    name: \"\",\n    tag: \"\",\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    const totalTodoCount = todos.length;\n    const completedTodoCount = todos.reduce((acc, todo) => (todo.completed ? acc + 1 : acc), 0);\n\n    return (\n      <>\n        <Form propOnSubmit={this.formSubmitHandler}/>  \n        <h1>Состояние компонента</h1>\n        <Counter initialValue={10} />\n        <Dropdown />\n        <ColorPicker options={colorPickerOptions} />\n\n        <div>\n          <p>Общее кол-во: {totalTodoCount}</p>\n          <p>Кол-во выполненных: {completedTodoCount}</p>\n        </div>\n\n        <TodoList todos={todos} onDeleteTodo={this.deleteTodo} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}