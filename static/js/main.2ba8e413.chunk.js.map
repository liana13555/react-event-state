{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.js","components/Dropdown/Dropdown.js","components/ColorPicker/ColorPicker.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["Controls","onIncrement","onDecrement","className","type","onClick","Value","value","Counter","state","props","initialValue","handleIncrement","setState","prevState","handleDecrement","this","Component","defaultProps","Dropdown","visible","toggle","ColorPicker","activeOptionIdx","setActiveIdx","index","makeOptionClassName","optionClasses","push","join","options","label","map","color","style","backgroundColor","TodoList","todos","onDeleteTodo","id","text","colorPickerOptions","App","initialTodos","deleteTodo","todoId","filter","todo","totalTodoCount","length","completedTodoCount","reduce","acc","completed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ba8e413.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Controls = ({onIncrement, onDecrement}) => (\r\n    <div className='Counter__controls'>\r\n        <button\r\n            type='button' onClick={onIncrement}>\r\n            Увеличить на 1\r\n        </button>\r\n        <button\r\n            type='button' onClick={onDecrement}>\r\n            Уменьшить на 1\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default Controls;\r\n\r\n","import React from 'react';\r\n\r\nconst Value = ({value}) => (\r\n      <span className='Counter__value'>{value}</span>\r\n)\r\n\r\nexport default Value;","import React, {Component} from 'react';\r\nimport Controls from './Controls';\r\nimport Value from './Value';\r\nimport './Counter.css';\r\n\r\nclass Counter extends Component {\r\n    static defaultProps = {\r\n        initialValue: 0,\r\n    };\r\n\r\n    static propTypes = {\r\n        //\r\n    };\r\n\r\n    state = {\r\n        value: this.props.initialValue,\r\n    };\r\n\r\n    handleIncrement = () => {\r\n        // this.setState({  // Изменяет состояние, т.е. состояние на момент регистрации\r\n        //     value: 10,\r\n        // });\r\n       \r\n        this.setState(prevState => ({ // Обновить от предыдущего. Основываясь на предыдущем передаем функцию\r\n            value: prevState.value + 1,\r\n        }));       \r\n    };\r\n\r\n\r\n    handleDecrement = () => {\r\n         this.setState(prevState => ({ \r\n            value: prevState.value - 1,\r\n        }));  \r\n       \r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        \r\n        return (\r\n            <div className='Counter'>\r\n                \r\n                <Value value={value}/>\r\n                <Controls\r\n                    onIncrement={this.handleIncrement}\r\n                    onDecrement={this.handleDecrement}\r\n                />\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\nexport default Counter;\r\n\r\n\r\n\r\n// class Counter extends React.Component {\r\n//     handleIncrement = event => {\r\n//         console.log('Кликнули');\r\n//         // console.log(event.target);\r\n        \r\n//         // const target = event.target;\r\n//         const {target} = event;  // деструктуризация\r\n\r\n//         setTimeout(() => {\r\n//             console.log(target);\r\n//         }, 1000)\r\n//     }\r\n\r\n//     handleDecrement = event => {\r\n//        console.log('Кликнули');\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className='Counter'>\r\n//             <span className='Counter__value'>0</span>\r\n\r\n//             <div className='Counter__controls'>\r\n//                     <button\r\n//                         type='button'\r\n//                         onClick={this.handleIncrement}>\r\n//                         Увеличить на 1\r\n//                     </button>\r\n//                     <button\r\n//                         type='button'\r\n//                         onClick={this.handleDecrement}>\r\n//                         Уменьшить на 1\r\n//                     </button>\r\n//             </div>\r\n//         </div>);\r\n//     }\r\n// }\r\n\r\n\r\n// export default Counter;","import React, { Component } from 'react';\r\nimport './Dropdown.css';\r\n\r\nclass Dropdown extends Component {\r\n    state = {\r\n        visible: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState(prevState => ({\r\n            visible: !prevState.visible,\r\n        }));\r\n    };\r\n    \r\n    // show = () => {\r\n    //     this.setState({ visible: true });\r\n    // }\r\n\r\n    // hide = () => {\r\n    //     this.setState({ visible: false });\r\n    // }\r\n\r\n    render() {\r\n//     const { visible } = this.state;\r\n\r\n    return (\r\n      <div className=\"Dropdown\">\r\n            <button\r\n                type=\"button\"\r\n                className=\"Dropdown__toggle\"\r\n                onClick={this.toggle}            // onMouseOver - если надо показать на hover                \r\n            >\r\n                {this.state.visible ? 'Скрыть' : 'Показать'}\r\n            </button>\r\n \r\n            {this.state.visible && (\r\n                <div className=\"Dropdown__menu\">Выпадающее меню</div>\r\n            )}          \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n\r\n       \r\n","import React, { Component } from 'react';\r\nimport './ColorPicker.css';\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    activeOptionIdx: 0,  // Это индекс\r\n  };\r\n\r\n  setActiveIdx = index => {\r\n    this.setState({ activeOptionIdx: index });\r\n  };\r\n\r\n  makeOptionClassName = index => {\r\n    const optionClasses = ['ColorPicker__option'];\r\n\r\n    if (index === this.state.activeOptionIdx) {\r\n      optionClasses.push('ColorPicker__option--active');\r\n    }\r\n\r\n    return optionClasses.join(' ');\r\n  };\r\n\r\n    render() {\r\n        const { activeOptionIdx } = this.state;\r\n        const { options } = this.props;\r\n        const { label } = options[activeOptionIdx];\r\n    return (\r\n      <div className=\"ColorPicker\">\r\n        <h2 className=\"ColorPicker__title\">Color Picker</h2>\r\n        <p>Выбран цвет: {label}</p>\r\n        <div>\r\n          {options.map(({ label, color }, index) => (\r\n              <button\r\n                  key={label}\r\n                  className={this.makeOptionClassName(index)}\r\n                  style={{ backgroundColor: color }}\r\n                  onClick={() => this.setActiveIdx(index)}\r\n            ></button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPicker;\r\n\r\n","import React from 'react';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({ todos, onDeleteTodo}) => (\r\n    <ul className='TodoList'>\r\n        {todos.map(({ id, text, }) => (\r\n        <li key={id} className='TodoList__item'>\r\n                <p className='TodoList__text'>{text}</p>\r\n                <button onClick={() => onDeleteTodo(id)}>Удалить</button>\r\n            </li>\r\n            ))}\r\n    </ul>\r\n\r\n)\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport Counter from './components/Counter';\r\nimport Dropdown from './components/Dropdown';\r\nimport ColorPicker from './components/ColorPicker';\r\nimport TodoList from './components/TodoList';\r\nimport initialTodos from './todos.json';\r\n\r\nconst colorPickerOptions = [\r\n  { label: 'red', color: '#F44336' },\r\n  { label: 'green', color: '#4CAF50' },\r\n  { label: 'blue', color: '#2196F3' },\r\n  { label: 'grey', color: '#607D8B' },\r\n  { label: 'pink', color: '#E91E63' },\r\n  { label: 'indigo', color: '#3F51B5' },\r\n];\r\n\r\nclass App extends Component {\r\n    state = {\r\n        todos: initialTodos,\r\n    };\r\n\r\n    deleteTodo = (todoId) => {\r\n        this.setState(prevState => ({\r\n            todos: prevState.todos.filter(todo => todo.id !== todoId),  \r\n    }));\r\n    }\r\n\r\n    render() {\r\n        const { todos } = this.state;\r\n\r\n        const totalTodoCount = todos.length;\r\n        const completedTodoCount = todos.reduce((acc, todo) => (todo.completed ? acc + 1 : acc), 0,);   \r\n\r\n        return (\r\n             <>\r\n        <h1>Состояние компонента</h1>\r\n         <Counter initialValue={10}/>\r\n         <Dropdown />\r\n                <ColorPicker options={colorPickerOptions} />\r\n                \r\n                <div>\r\n                    <p>Общее кол-во: {totalTodoCount}</p>\r\n                    <p>Кол-во выполненных: {completedTodoCount}</p>\r\n                </div>\r\n\r\n                <TodoList todos={todos} onDeleteTodo={this.deleteTodo}/>\r\n\r\n    </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}